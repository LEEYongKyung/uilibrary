.card{
  width: min(440px, 100%);
  border: 1px solid var(--border);
  border-radius: 12px;
  overflow: hidden;
  background: linear-gradient(180deg, rgba(255,255,255,.03), rgba(255,255,255,.01));
}

.card__media{
  height: 120px;
  background:
    radial-gradient(400px 200px at 20% -10%, rgba(103,232,249,.25), transparent 40%),
    radial-gradient(400px 200px at 120% 120%, rgba(244,114,182,.25), transparent 40%),
    #0b0f16;
}

.card__body{
  padding: 12px;
  display: grid;
  gap: 8px;
}

.card__title{ font-weight: 700; }
.card__text{ color: var(--muted); }
.card__actions{ display: flex; gap: 8px; }


/* === Flip3D === */
.container_flip3d{
  perspective: 1000px;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
}

.card_flip3d{
  width: 200px;
  height: 300px;
  position: relative;
  transform-style: preserve-3d;
  transition:
        transform .6s cubic-bezier(.4, 0, .2, 1);

}

.container_flip3d:hover .card_flip3d {
  transform: rotateY(180deg);
}

.card_front_flip3d,
.card_back_flip3d{

  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display:  flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  /* 반사효과 카드 아래쪽에 반사된 그림 표현  */
  -webkit-box-reflect: below 5px linear-gradient(transparent, rgba(255,255,255, 0.2)) 
}

.card_front_flip3d img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  cursor: pointer;
}

.card_back_flip3d {
  background: #212121;
  color: #d4d3d3;
  text-align: center;
  transform:rotateY(180deg);
}

.card_back_flip3d h2 {
  font-size: 20px;
  margin-bottom: 10px;
  font-weight: 500;
}

.card_back_flip3d p {
  font-size: 12px;
  letter-spacing: 1px;
  margin-top: 15px;
  font-weight: 300;
}

/* === OverlayHover=== */
.overlay-cards-container{
  position: relative ; 
  width: 340px;
  height: 220px;
  margin: 40px auto;
}

.overlay-card{
  position: absolute;
  width: 120px;
  height: 200px;
  top: 40px;
  left: 70px;
  /* box-shadow는 그림자를 그리는 요소. 첫번째 인자는 좌우 오프셋 좌우에 그림자를 만들것인지 요소 확인 0이므로 그림자가 생기지 않는다. , 두번째 인자는 상하 오프셋으로 상하에 그림자를 만들것인가를 정의. 양수면 아래로 그림자가 생성, 음수면 위로 그림자가 생성 4px 이므로 아래로 4px 길이의 그림자 생성. 세번째 인자는 흐림정도이다. 수치가 높으면 그림자가 넓게 펴저 자연스럽게 그림자가 흐리게 퍼진다. 24px 이면 넓게 그림자가 퍼진다. 마지막 인자는 그림자 색이다.   */
  box-shadow: 0 4px 8px #0002;
  border-radius: 16px;
  cursor: pointer;
  /* transition은 자연스럽게 애니메이션 효과를 만드는 것. box-shadow 속성이 있다면 2초 동안 자연스럽게 움직임. transform은 자연스럽게 커지거나 작아지도록 만듬.  */
  transition: box-shadow .2s,  transform .2s;
  z-index: 1;
}

.overlay-card.card1 {
  transform: translateX(-60px) rotate(-8deg);
  /* url을 통해 이미지 경로를 이용해 불러온다. center(가로) center(세로) 는 background position으로 가로 세로 모두 정중앙에 놓겠다는 것이다.  / cover는 background-size로 cover는 이미지의 비융을 유지하면서 배경화면 영역 전체를 덮도록 크기를 조정 . No-repeat은 이미지 요소보다 크기가 작더라도 반복해서 표현하지 않는다.  */
  background: url(../assets/images/Scene_1.png) center center / cover no-repeat;
}

.overlay-card.card2 {
  transform: translateX(0px) rotate(0deg);
  /* url을 통해 이미지 경로를 이용해 불러온다. center(가로) center(세로) 는 background position으로 가로 세로 모두 정중앙에 놓겠다는 것이다.  / cover는 background-size로 cover는 이미지의 비융을 유지하면서 배경화면 영역 전체를 덮도록 크기를 조정 . No-repeat은 이미지 요소보다 크기가 작더라도 반복해서 표현하지 않는다.  */
  background: url(../assets/images/Scene_2.png) center center / cover no-repeat;
}

.overlay-card.card3 {
  transform: translateX(60px) rotate(8deg);
  /* url을 통해 이미지 경로를 이용해 불러온다. center(가로) center(세로) 는 background position으로 가로 세로 모두 정중앙에 놓겠다는 것이다.  / cover는 background-size로 cover는 이미지의 비융을 유지하면서 배경화면 영역 전체를 덮도록 크기를 조정 . No-repeat은 이미지 요소보다 크기가 작더라도 반복해서 표현하지 않는다.  */
  background: url(../assets/images/Scene_3.png) center center / cover no-repeat;
}

.overlay-card:hover {
  z-index: 10;
  box-shadow: 0 8px 16px #0003;
  transform: translateY(-10px) scale(1.05);

}